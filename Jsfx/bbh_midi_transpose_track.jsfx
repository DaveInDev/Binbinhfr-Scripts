// desc: MIDI Transpose Track (Bbh)
// version: 1.2
// author: binbinhfr
// about:
//   Transpose MIDI notes of a track by semitones.
//   The Track Transpose value only affects the current track, but can be combined
//   with the Project Transpose value, shared by all instances of this plugin in the project,
//   and defined in the "MIDI Transpose Project" plugin added to the master track.
// changelog:
//   v1.0 initial release
//   v1.1 change scale
//   v1.2 use ext_noinit to avoid project_id change at every play/stop

options:gmem=BbhMidiTransposeProjectAndTracks

slider1:transpose_track=0<-48,48,1>Track transpose
slider2:transpose_project_status=1<0,1,1{Off,On}>Use project transpose on current track
slider3:transpose_project=0<-48,48,1>Project transpose (read-only)
slider4:transpose_total=0<-48,48,1>Total transpose (read-only)

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
  ext_noinit = 1.0;
  //store project transpose value in shared memory (shared between instances)
  
  (project_id == 0) ? (project_id = gmem[1];);
  (project_id != 0) ? (transpose_project = gmem[project_id];);
  
  // memorize which chnannel is used, to send notes off only to these channels
  // (usefull in case of several tracks using the same poly-channel instrument...)
  channels_used = 0;
  n_chan = 0;
  loop(16,
    channels_used[n_chan] = 0;
    n_chan += 1;
  );

  transpose_total = (transpose_project_status ? transpose_project : 0) + transpose_track;
  transpose_total_prev = transpose_total;

  do_send_all_notes_off = 0;
  count_loops = 0;
  max_loops = srate/samplesblock/2;
 
  function send_all_notes_off() (
    n_chan = 0;
    offset = samplesblock-33;
    
    loop (16,
      (channels_used[n_chan]) ? (
        // message all notes off
        midisend(offset, 0xB0+n_chan, 0x7B, 0x00 );
        offset +=1;
        // message sustain pedal off
        midisend(offset, 0xB0+n_chan, 0x40, 0x00);
      );
      channels_used[n_chan] = 0;
      offset +=1;
      n_chan += 1;
    );
  );
 
@slider
  transpose_total = (transpose_project_status ? transpose_project : 0) + transpose_track;
  (transpose_total_prev != transpose_total) ? (do_send_all_notes_off = 1;);
  transpose_total_prev = transpose_total;

@block
  count_loops -= 1;
  (count_loops < 1) ? (
    count_loops = max_loops;
    
    project_id = gmem[1];
    (project_id != 0) ? transpose_project = gmem[10+project_id];
 
    transpose_total = (transpose_project_status ? transpose_project : 0) + transpose_track;
    (transpose_total_prev != transpose_total) ? (do_send_all_notes_off = 1;);
    transpose_total_prev = transpose_total;
  );
  
  while (
    midirecv(msg_offs, msg1, msg2, msg3) ? (
      n_chan = msg1 & 0x0F;
      channels_used[n_chan] = 1;      
      ((msg1 & 0xF0) == 0x90 || (msg1 & 0xF0) == 0x80) ? ( 
        // note on/off messages
        msg2 += transpose_total;
        msg2 = (msg2 > 127) ? 127 : (msg2 < 0) ? 0 : msg2;
        midisend(msg_offs, msg1, msg2, msg3);
      ) : 
      (
        // pass thru non "note on" messages
         midisend(msg_offs, msg1, msg2, msg3);
      );
    );
  );
  
  (do_send_all_notes_off) ? (
    send_all_notes_off();
    do_send_all_notes_off = 0;
  );
  
@sample
  spl0 = spl0;
  spl1 = spl1;

